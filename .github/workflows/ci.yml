name: CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: ['17', '21']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        if: runner.os != 'Windows'
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon --stacktrace

      - name: Run tests
        run: ./gradlew test --no-daemon --stacktrace

      - name: Generate test report
        if: always()
        run: ./gradlew test --no-daemon

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-jdk${{ matrix.java }}
          path: build/test-results/test/
          retention-days: 30

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ matrix.os }}-jdk${{ matrix.java }}
          path: build/reports/tests/test/
          retention-days: 30

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_name: Test Report (${{ matrix.os }}, JDK ${{ matrix.java }})

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run detekt
        run: ./gradlew detekt --no-daemon || true

      - name: Check code style
        run: ./gradlew ktlintCheck --no-daemon || true

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Check dependencies
        run: ./gradlew dependencies --no-daemon

      - name: Dependency vulnerability scan
        run: ./gradlew dependencyCheckAnalyze --no-daemon || true

  build-artifacts:
    name: Build Distribution Artifacts
    runs-on: ubuntu-latest
    needs: [build, code-quality]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build JAR
        run: ./gradlew jar --no-daemon

      - name: Build distribution
        run: ./gradlew distZip distTar --no-daemon

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: krefactorai-jar
          path: build/libs/*.jar
          retention-days: 30

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: krefactorai-distributions
          path: |
            build/distributions/*.zip
            build/distributions/*.tar
          retention-days: 30

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport --no-daemon

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: codecov-krefactorai
          fail_ci_if_error: false

